target-version = "py38"
line-length = 80

[lint]
select = [
  "A",
  "ARG",
  "B",
  # "BLE",
  "C",
  "C4",
  # "C90"  mccabe

  # Not clear if this check is useful. Too many commas everywhere.
  # "COM",

  "D",

  # "DTZ",
  # "E",
  "EXE",
  "ERA",
  "F",
  # "FBT",
  "G",
  "I",
  "ISC",
  "ICN",
  # "N",
  "PGH",
  # "PIE",
  "PL",  # Pylint
  # "PT",  # pytest
  # "PTH",
  "Q",  # Quotes
  # "RET",
  # "RUF",
  # "S",
  # "SIM",
  # "SLF",
 "T20",
  # "TCH",
  # "TRY",
  "UP",
  "W",
  "YTT",
]

ignore = [
    # TBD: Unnecessary `list` comprehension (rewrite using `list()`)
    "C416",
    # TBD: Unnecessary `map` usage (rewrite using a `list` comprehension)
    "C417",

    # X is too complex
    "C901",

    # FIXME: Would be great to enable these at some point.
    # Missing docstring in public module
    "D100",
    # Missing docstring in public class
    "D101",
    # Missing docstring in public method
    "D102",
    # Missing docstring in public function
    "D103",
    # Missing docstring in public package
    "D104",
    # Missing docstring in magic method
    "D105",
    # Missing docstring in public nested class
    "D106",
    # Missing docstring in `__init__`
    "D107",

    # One-line docstring should fit on one line
    "D200",

    # No blank lines allowed after function docstring (found {num_lines})
    "D202",

    # 1 blank line required before class docstring
    "D203",

    # FIXME: 1 blank line required between summary line and description
    "D205",

    # Multi-line docstring summary should start at the first line
    "D212",

    # FIXME: This is nice to enable but some test fixtures will need to be fixed.
    # First line should end with a period
    "D400",

    # FIXME: First line of docstring should be in imperative mood: "Some text."
    "D401",

    # FIXME: Enable at some point: First word of the docstring should not be "This"
    "D404",

    # No blank lines allowed between a section header and its content
    "D412",

    # Missing blank line after last section ("Examples")
    "D413",

    # FIXME: This is nice to enable but some test fixtures will need to be fixed.
    # First line should end with a period, question mark, or exclamation point
    "D415",

    # Line length violations. This is handled by Ruff format.
    "E501",

    # A warning by ruff format:
    # warning: The following rules may cause conflicts when used with the formatter: `ISC001`.
    "ISC001",

    # PGH004 Use specific rule codes when using ruff: noqa
    "PGH004",

    # Too many return statements
    "PLR0911",

    # Too many branches
    "PLR0912",

    # Too many arguments in function definition
    "PLR0913",

    # Too many statements
    "PLR0915",

    # FIXME: Enable: Use `sys.exit()` instead of `exit`
    "PLR1722",

    # Magic value used in comparison
    "PLR2004",

    # Use `elif` instead of `else` then `if`, to reduce indentation
    "PLR5501",

    "UP035", # [*] Import from `collections.abc` instead: `Iterator`
]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

# Skip non UTF-8 test files
exclude = ["tests/**/invalid_file*"]

# B008 Do not perform function calls in argument defaults.
# The call is performed only once at function definition time.

[lint.per-file-ignores]
"strictdoc/server/routers/main_router.py" = ["B008"]

# Some of our helpers have deliberatly the name of a standard library module

[lint.flake8-builtins]
builtins-allowed-modules = ["math", "pickle", "string"]
